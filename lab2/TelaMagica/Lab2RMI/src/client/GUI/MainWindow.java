/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.GUI;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.SwingUtilities;

/**
 * Janela inicial após iniciar a conexão.
 *
 * @author Yan
 * @author Micael
 * @author Victor
 */
public class MainWindow extends javax.swing.JFrame {

    private ClientMain cm = null;
    ArrayList<String> listaClientes = null;
    String nickname = null;

    public MainWindow(ClientMain cm) {
        initComponents();
        setTitle("Lab 2 - RMI - Tela Mágica");
        this.cm = cm;
        this.listaClientes = new ArrayList<>();


        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent we) {
                try {
                    cm.fecharConexao();
                    System.exit(0);
                } catch (RemoteException ex) {
                    Logger.getLogger(MainWindow.class.getName())
                          .log(Level.SEVERE, null, ex);
                    System.exit(1);
                }
            }
        });
    }

    public void setNickName(String nickname) {
        this.nickname = nickname;
    }

    public void addNaLista(String nickname) {
        listaClientes.add(nickname);
        String antes = usersTA.getText();
        usersTA.setText(nickname + "\n" + antes);
    }

    public void removerDaLista(String nickname) {
        listaClientes.remove(nickname);
        usersTA.setText( listaClientes.stream().collect(Collectors.joining("\n")) );
    }

    public void atualizarTextArea(String text) {
        SwingUtilities.invokeLater(new Runnable(){
            public void run(){
                msgTA.setText(text);
            }
        });
    }

    public void atualizarValorNoServer(String text) {
        try {
            this.cm.area.callSetText(text);
        } catch (RemoteException ex) {
            Logger.getLogger(MainWindow.class.getName())
                  .log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgTA = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        usersTA = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lab2 - RMI");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setBackground(java.awt.Color.darkGray);

        msgTA.setColumns(20);
        msgTA.setFont(new java.awt.Font("Ubuntu", 0, 24)); // NOI18N
        msgTA.setRows(5);
        msgTA.setText("adsad");
        msgTA.setBorder(null);
        msgTA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                msgTAKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(msgTA);

        usersTA.setEditable(false);
        usersTA.setColumns(20);
        usersTA.setFont(new java.awt.Font("Ubuntu Light", 1, 14)); // NOI18N
        usersTA.setRows(5);
        usersTA.setToolTipText("usuários conectados");
        usersTA.setBorder(null);
        jScrollPane2.setViewportView(usersTA);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE)
                .addGap(81, 81, 81)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void msgTAKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_msgTAKeyReleased

        atualizarValorNoServer( msgTA.getText() );
        msgTA.moveCaretPosition( msgTA.getText().length() );

//        int len = msgTA.getDocument().getLength();
//        msgTA.setCaretPosition(len);
        msgTA.requestFocusInWindow();
    }//GEN-LAST:event_msgTAKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea msgTA;
    private javax.swing.JTextArea usersTA;
    // End of variables declaration//GEN-END:variables
}
